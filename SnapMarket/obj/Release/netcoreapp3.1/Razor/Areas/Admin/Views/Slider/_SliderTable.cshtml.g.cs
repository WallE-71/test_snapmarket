#pragma checksum "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "025a55dd5a47322756b6fbccf71b69bd3a4214cf"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Slider__SliderTable), @"mvc.1.0.view", @"/Areas/Admin/Views/Slider/_SliderTable.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
using SnapMarket.Services.Contracts;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"025a55dd5a47322756b6fbccf71b69bd3a4214cf", @"/Areas/Admin/Views/Slider/_SliderTable.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d427e38f5e5e1d1d9a2e3ef7c542ced3d59541da", @"/Areas/Admin/Views/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Slider__SliderTable : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", "~/assets/css/style.css", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("btn btn-success text-white"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "CreateOrUpdate", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "025a55dd5a47322756b6fbccf71b69bd3a4214cf4648", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.Href = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
#nullable restore
#line 4 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion = true;

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-append-version", __Microsoft_AspNetCore_Mvc_TagHelpers_LinkTagHelper.AppendVersion, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<div id=\"toolbar\">\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "025a55dd5a47322756b6fbccf71b69bd3a4214cf6643", async() => {
                WriteLiteral("\r\n        <i class=\"fa fa-plus\"></i> | افزودن اسلایدر جدید\r\n    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <button type=""button"" id=""remove"" class=""btn btn-danger"" onclick=""DeleteGroup('Slider', getIdSelections())"" disabled>
        <i class=""fa fa-trash""></i> | حذف گروهی
    </button>
</div>

<table id=""table""
       data-toolbar=""#toolbar""
       data-search=""true""
       data-show-refresh=""true""
       data-show-toggle=""true""
       data-show-fullscreen=""true""
       data-show-columns=""true""
       data-detail-view=""true""
       data-show-export=""true""
       data-click-to-select=""false""
       data-detail-formatter=""detailFormatter""
       data-minimum-count-columns=""2""
       data-show-pagination-switch=""true""
       data-pagination=""true""
       data-id-field=""id""
       data-page-list=""[10, 25, 50, 100, all]""
       data-show-footer=""true""
       data-side-pagination=""server""
       data-url=""/Admin/Slider/GetSliders""
       data-response-handler=""responseHandler"">
</table>

<script>
    var $table = $('#table');
    var $remove = $('#remove');
    var selections = []

");
            WriteLiteral(@"    function get_query_params(p) {
        return {
            extraParam: 'abc',
            search: p.title,
            sort: p.sort,
            order: p.order,
            limit: p.limit,
            offset: p.offset
        }
    }

    function responseHandler(res) {
        $.each(res.rows, function (i, row) {
            row.state = $.inArray(row.id, selections) !== -1
        })
        return res
    }

    function getIdSelections() {
        return $.map($table.bootstrapTable('getSelections'), function (row) {
            return row.Id;
        });
    }

    function detailFormatter(index, row) {
        var html = []
        $.each(row, function (key, value) {
            if (key != ""state""  && key != ""ردیف"" && key != ""fileStores"" && key != ""imageLocation"" && key != ""descriptionsSlider"" && key != ""isComplete"" && key != ""imageFile"" && key != ""updateTime"" && key != ""insertTime"" && key != ""name"" && key != ""removeTime"" && key != ""url"") {
                if (key == 'titl");
            WriteLiteral(@"e') {
                    key = 'عنوان اسلایدر 1';
                    if (value == null)
                        value = '';
                    else
                        key = '<span style=""font-weight: bold;"">' + key + '</span>';
                }
                if (key == 'description') {
                    key = 'توضیحات اسلایدر 1';
                    if (value == null)
                        value = '';
                    else
                        key = '<span style=""font-weight: bold;"">' + key + '</span>';
                }
                if (key == 'titleSlider1') {
                    key = 'عنوان اسلایدر ۲';
                    if (value == null)
                        value = '';
                    else
                        key = '<span style=""font-weight: bold;"">' + key + '</span>';
                }
                if (key == 'descriptionSlider1') {
                    key = 'توضیحات اسلایدر ۲';
                    if (value == null)
                      ");
            WriteLiteral(@"  value = '';
                    else
                        key = '<span style=""font-weight: bold;"">' + key + '</span>';
                }
                if (key == 'descriptionSlider3') {
                    key = 'توضیحات اسلایدر ۴';
                    if (value == null)
                        value = '';
                    else
                        key = '<span style=""font-weight: bold;"">' + key + '</span>';
                }
                if (key == 'persianInsertTime') {
                    key = 'تاریخ درج اسلایدر';
                    if (value == null)
                        value = '';
                }
                if (key == 'typeOfSlider') {
                    key = 'نوع اسلایدر';
                    if (value != 0) {
                        if (value == 1)
                            value = 'اسلایدر ثابت';
                        if (value == 2)
                            value = 'اسلایدر متحرک بدون کنترل';
                        if (value == 3)
       ");
            WriteLiteral(@"                     value = 'اسلایدر با امکان جابجایی';
                        if (value == 4)
                            value = 'اسلایدر با توضیحات و امکان جابجایی';
                    }
                    else
                        value = 'اسلایدری انتخاب نشده است';
                }
                html.push('<p><b>' + key + ':</b> ' + value + '</p>')
            }
            if (key == 'url') {
                key = 'آدرس اسلایدر';
                var url = '");
#nullable restore
#line 129 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                      Write(string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '/Slider/' + row.Id + '/' + value;
                html.push('<p><b style=""float:right"">' + key + ':</b> ' + '<a href=""' + url + '"" style=""float:right;direction:ltr;margin-right:2px;"">' + url + '</a>' + '</p><br/><br/>')
            }
            if (key == ""imageFile"") {
                key = 'تصویر اسلایدر';
                if (value != null) {
                    var url = '");
#nullable restore
#line 135 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                          Write(string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '/slider/' + value;
                    html.push('<p><b>' + key + ':</b>',
                        '<a href=""javascript:void(0);"" data-toggle=""modal"" data-target=""#imageModal"">',
                            '<img src=""' + url + '"" height=""200"" />',
                        '</a>',
                        '<div id=""imageModal"" class=""modal fade"" role=""dialog"">',
                            '<div class=""modal-dialog  modal-lg"">',
                                '<div class=""modal-content"">',
                                    '<div class=""modal-header"">',
                                        '<h4 class=""modal-title"" id=""myModalLabel"">' + row.imageFile + '</h4 >',
                                        '<button type=""button"" class=""close"" data-dismiss=""modal"" aria-hidden=""true"">&times;</button>',
                                    '</div>',
                                        '<div class=""modal-body"">',
                                            '<img id=""modalImage"" src=""' + url + '""");
            WriteLiteral(@" style=""width:100%;height:100%;max-width:900px;max-height:500px;""/>',
                                        '</div>',
                                    '<div class=""modal-footer"">',
                                        '<input type=""button"" class=""btn btn-sm btn-light"" style=""color:red;"" value=""بزرگنمایی"" onclick=""findImage()""/>',
                                        '<button type=""button"" class=""btn btn-sm btn-secondary"" data-dismiss=""modal"">بستن</button>',
                                    '</div>',
                                '</div>',
                            '</div>',
                        '</div>',
                    '</p> ');
                    value = '';
                }
            }
        })
        return html.join('')
    }

    function operateFormatter(value, row, index) {
        var access = """";
        if ('");
#nullable restore
#line 167 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
        Write(securityTrimmingService.CanUserAccess(User,"Admin", "Slider", "CreateOrUpdate"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\' == \'True\') {\r\n            access = access + \'<a class=\"text-success\" href=\"/Admin/Slider/CreateOrUpdate?sliderId=\' + row.Id + \'\" title=\"ویرایش\"><i class=\"fa fa-edit\"></i></a>\';\r\n        }\r\n        if (\'");
#nullable restore
#line 170 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
        Write(securityTrimmingService.CanUserAccess(User,"Admin", "Slider", "Delete"));

#line default
#line hidden
#nullable disable
            WriteLiteral("\' == \'True\') {\r\n            access = access + \'<button type=\"button\" class=\"btn-link text-danger\" data-toggle=\"ajax-modal\" data-url=");
#nullable restore
#line 171 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                                                                                                               Write(Url.Action("Delete", "Slider"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"/?sliderId=' + row.Id + ' title=""حذف""><i class=""fa fa-trash""></i></button >';
        }
        return access;
    }

    function imageFormatter(index, row) {
        var html = []
        $.each(row, function (key, value) {
            if (key == ""imageFile"" && value != null) {
                var url = '");
#nullable restore
#line 180 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                      Write(string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host));

#line default
#line hidden
#nullable disable
            WriteLiteral("\' + \'/slider/\' + value;\r\n                html.push(\'<p><img src=\"\' + url + \'\" height=\"200\" width=\"400\" title=\"اسلایدر\" /></p>\')\r\n            }\r\n            else if (key == \"imageFiles\" && value != null) {\r\n                var url = \'");
#nullable restore
#line 184 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                      Write(string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host));

#line default
#line hidden
#nullable disable
            WriteLiteral("\' + \'/slider/\';\r\n                var cssUrl = \'");
#nullable restore
#line 185 "C:\Other\Training\Asp.Net Core\SnapMarket\SnapMarket\Areas\Admin\Views\Slider\_SliderTable.cshtml"
                         Write(string.Format("{0}://{1}", Context.Request.Scheme, Context.Request.Host));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"' + '/assets/css/style.css';
                var i;
                for (i = 0; i < value.length; i++){
                    html.push(
                        '<link href=""'+cssUrl+'"" rel=""stylesheet""/>',
                        '<div id=""carousel-fade"" class=""carousel carousel-fade"" data-ride=""carousel"" data-interval=""10000"" style=""width: 400px; max-height: 200px;"">',
                        '<div class=""carousel-inner embed-responsive embed-responsive-16by9"" role=""listbox"">',
                        '<div class=""carousel-item embed-responsive-item active"" style=""max-height: 200px; transition: opacity .4s ease-in-out;"">',
                        '<img src=""' + url + value[i] + '"" title=""اسلایدر"" style=""object-fit: cover; width: 100%; height: 100%;"" class=""img-fluid"">',
                        '</div>',
                        '</div>',
                        '</div>')
                }
            }
        })
        return html.join('')
    }

    function locationFormatter(value, row, i");
            WriteLiteral(@"ndex) {
        var location = ""بالای صفحه"";
        if (row.imageLocation == 2)
            location = ""مرکز"";
        if (row.imageLocation == 3)
            location = ""پایین صفحه"";
        return [
            '<span>' + location + '</span>'
        ].join('')
    }

    function totalTextFormatter(data) {
        return 'تعداد'
    }

    function totalNameFormatter(data) {
        return data.length
    }

    function initTable() {
        $table.bootstrapTable('destroy').bootstrapTable({
            height: 900,
            locale: 'fa-IR',
            columns: [
                [{
                    field: 'state',
                    checkbox: true,
                    rowspan: 2,
                    align: 'center',
                    valign: 'middle',
                }, {
                    field: 'ردیف',
                    title: 'ردیف',
                    rowspan: 2,
                    align: 'center',
                    valign: 'middle',
              ");
            WriteLiteral(@"      footerFormatter: totalTextFormatter
                }, {
                    title: 'جزئیات اطلاعات اسلایدرها',
                    colspan: 3,
                    align: 'center'
                }],
                [{
                    field: '',
                    title: 'تصویر',
                    sortable: false,
                    align: 'center',
                    formatter: imageFormatter,
                },{
                    field: 'imageLocation',
                    title: 'محل قرارگیری اسلایدر',
                    sortable: true,
                    align: 'center',
                    formatter: locationFormatter,
                },{
                    field: 'operate',
                    title: 'عملیات',
                    align: 'center',
                    events: window.operateEvents,
                    formatter: operateFormatter
                }]
            ]
        })

        $table.on('check.bs.table uncheck.bs.table ' +
            'c");
            WriteLiteral(@"heck-all.bs.table uncheck-all.bs.table',
            function () {
                $remove.prop('disabled', !$table.bootstrapTable('getSelections').length)
                selections = getIdSelections()
            })
    }

    $(function () {
        initTable()
        $('#locale').change(initTable)
    })
</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public ISecurityTrimmingService securityTrimmingService { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
